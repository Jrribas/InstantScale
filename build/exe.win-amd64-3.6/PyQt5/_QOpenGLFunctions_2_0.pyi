# The PEP 484 type hints stub file for the _QOpenGLFunctions_2_0 module.
#
# Generated by SIP 4.18
#
# Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
# 
# This file is part of PyQt5.
# 
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file.  Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
# 
# If you do not wish to use this file under the terms of the GPL version 3.0
# then you may purchase a commercial license.  For more information contact
# info@riverbankcomputing.com.
# 
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


import typing
import sip

from PyQt5 import QtGui

# Support for QDate, QDateTime and QTime.
import datetime

# Convenient type aliases.
PYQT_SIGNAL = typing.Union[QtCore.pyqtSignal, QtCore.pyqtBoundSignal]
PYQT_SLOT = typing.Union[typing.Callable[..., None], QtCore.pyqtBoundSignal]

# Convenient aliases for complicated OpenGL types.
PYQT_OPENGL_ARRAY = typing.Union[typing.Sequence[int], typing.Sequence[float],
        sip.Buffer, None]
PYQT_OPENGL_BOUND_ARRAY = typing.Union[typing.Sequence[int],
        typing.Sequence[float], sip.Buffer, int, None]


class QOpenGLFunctions_2_0(QtGui.QAbstractOpenGLFunctions):

    def __init__(self) -> None: ...

    def glVertexAttrib1d(self, index: int, x: float) -> None: ...
    def glVertexAttrib1dv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib1f(self, index: int, x: float) -> None: ...
    def glVertexAttrib1fv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib1s(self, index: int, x: int) -> None: ...
    def glVertexAttrib1sv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib2d(self, index: int, x: float, y: float) -> None: ...
    def glVertexAttrib2dv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib2f(self, index: int, x: float, y: float) -> None: ...
    def glVertexAttrib2fv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib2s(self, index: int, x: int, y: int) -> None: ...
    def glVertexAttrib2sv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib3d(self, index: int, x: float, y: float, z: float) -> None: ...
    def glVertexAttrib3dv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib3f(self, index: int, x: float, y: float, z: float) -> None: ...
    def glVertexAttrib3fv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib3s(self, index: int, x: int, y: int, z: int) -> None: ...
    def glVertexAttrib3sv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Nbv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Niv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Nsv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Nub(self, index: int, x: int, y: int, z: int, w: int) -> None: ...
    def glVertexAttrib4Nubv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Nuiv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4Nusv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4bv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4d(self, index: int, x: float, y: float, z: float, w: float) -> None: ...
    def glVertexAttrib4dv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4f(self, index: int, x: float, y: float, z: float, w: float) -> None: ...
    def glVertexAttrib4fv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4iv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4s(self, index: int, x: int, y: int, z: int, w: int) -> None: ...
    def glVertexAttrib4sv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4ubv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4uiv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertexAttrib4usv(self, index: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glFogCoordf(self, coord: float) -> None: ...
    def glFogCoordfv(self, coord: PYQT_OPENGL_ARRAY) -> None: ...
    def glFogCoordd(self, coord: float) -> None: ...
    def glFogCoorddv(self, coord: PYQT_OPENGL_ARRAY) -> None: ...
    def glFogCoordPointer(self, type: int, stride: int, pointer: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3b(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3bv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3d(self, red: float, green: float, blue: float) -> None: ...
    def glSecondaryColor3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3f(self, red: float, green: float, blue: float) -> None: ...
    def glSecondaryColor3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3i(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3s(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3ub(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3ubv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3ui(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3uiv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColor3us(self, red: int, green: int, blue: int) -> None: ...
    def glSecondaryColor3usv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glSecondaryColorPointer(self, size: int, type: int, stride: int, pointer: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos2d(self, x: float, y: float) -> None: ...
    def glWindowPos2dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos2f(self, x: float, y: float) -> None: ...
    def glWindowPos2fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos2i(self, x: int, y: int) -> None: ...
    def glWindowPos2iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos2s(self, x: int, y: int) -> None: ...
    def glWindowPos2sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos3d(self, x: float, y: float, z: float) -> None: ...
    def glWindowPos3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos3f(self, x: float, y: float, z: float) -> None: ...
    def glWindowPos3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos3i(self, x: int, y: int, z: int) -> None: ...
    def glWindowPos3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glWindowPos3s(self, x: int, y: int, z: int) -> None: ...
    def glWindowPos3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glClientActiveTexture(self, texture: int) -> None: ...
    def glMultiTexCoord1d(self, target: int, s: float) -> None: ...
    def glMultiTexCoord1dv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord1f(self, target: int, s: float) -> None: ...
    def glMultiTexCoord1fv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord1i(self, target: int, s: int) -> None: ...
    def glMultiTexCoord1iv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord1s(self, target: int, s: int) -> None: ...
    def glMultiTexCoord1sv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord2d(self, target: int, s: float, t: float) -> None: ...
    def glMultiTexCoord2dv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord2f(self, target: int, s: float, t: float) -> None: ...
    def glMultiTexCoord2fv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord2i(self, target: int, s: int, t: int) -> None: ...
    def glMultiTexCoord2iv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord2s(self, target: int, s: int, t: int) -> None: ...
    def glMultiTexCoord2sv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord3d(self, target: int, s: float, t: float, r: float) -> None: ...
    def glMultiTexCoord3dv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord3f(self, target: int, s: float, t: float, r: float) -> None: ...
    def glMultiTexCoord3fv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord3i(self, target: int, s: int, t: int, r: int) -> None: ...
    def glMultiTexCoord3iv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord3s(self, target: int, s: int, t: int, r: int) -> None: ...
    def glMultiTexCoord3sv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord4d(self, target: int, s: float, t: float, r: float, q: float) -> None: ...
    def glMultiTexCoord4dv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord4f(self, target: int, s: float, t: float, r: float, q: float) -> None: ...
    def glMultiTexCoord4fv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord4i(self, target: int, s: int, t: int, r: int, q: int) -> None: ...
    def glMultiTexCoord4iv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultiTexCoord4s(self, target: int, s: int, t: int, r: int, q: int) -> None: ...
    def glMultiTexCoord4sv(self, target: int, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glLoadTransposeMatrixf(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glLoadTransposeMatrixd(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultTransposeMatrixf(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultTransposeMatrixd(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glColorTable(self, target: int, internalformat: int, width: int, format: int, type: int, table: PYQT_OPENGL_ARRAY) -> None: ...
    def glColorTableParameterfv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glColorTableParameteriv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glCopyColorTable(self, target: int, internalformat: int, x: int, y: int, width: int) -> None: ...
    def glGetColorTableParameterfv(self, target: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetColorTableParameteriv(self, target: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glColorSubTable(self, target: int, start: int, count: int, format: int, type: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCopyColorSubTable(self, target: int, start: int, x: int, y: int, width: int) -> None: ...
    def glConvolutionFilter1D(self, target: int, internalformat: int, width: int, format: int, type: int, image: PYQT_OPENGL_ARRAY) -> None: ...
    def glConvolutionFilter2D(self, target: int, internalformat: int, width: int, height: int, format: int, type: int, image: PYQT_OPENGL_ARRAY) -> None: ...
    def glConvolutionParameterf(self, target: int, pname: int, params: float) -> None: ...
    def glConvolutionParameterfv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glConvolutionParameteri(self, target: int, pname: int, params: int) -> None: ...
    def glConvolutionParameteriv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glCopyConvolutionFilter1D(self, target: int, internalformat: int, x: int, y: int, width: int) -> None: ...
    def glCopyConvolutionFilter2D(self, target: int, internalformat: int, x: int, y: int, width: int, height: int) -> None: ...
    def glGetConvolutionParameterfv(self, target: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetConvolutionParameteriv(self, target: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glHistogram(self, target: int, width: int, internalformat: int, sink: int) -> None: ...
    def glMinmax(self, target: int, internalformat: int, sink: int) -> None: ...
    def glResetHistogram(self, target: int) -> None: ...
    def glResetMinmax(self, target: int) -> None: ...
    def glArrayElement(self, i: int) -> None: ...
    def glColorPointer(self, size: int, type: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glDisableClientState(self, array: int) -> None: ...
    def glEdgeFlagPointer(self, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glEnableClientState(self, array: int) -> None: ...
    def glIndexPointer(self, type: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glNormalPointer(self, type: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glTexCoordPointer(self, size: int, type: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glVertexPointer(self, size: int, type: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glPopClientAttrib(self) -> None: ...
    def glPushClientAttrib(self, mask: int) -> None: ...
    def glNewList(self, list: int, mode: int) -> None: ...
    def glEndList(self) -> None: ...
    def glCallList(self, list: int) -> None: ...
    def glDeleteLists(self, list: int, range: int) -> None: ...
    def glGenLists(self, range: int) -> int: ...
    def glListBase(self, base: int) -> None: ...
    def glBegin(self, mode: int) -> None: ...
    def glBitmap(self, width: int, height: int, xorig: float, yorig: float, xmove: float, ymove: float, bitmap: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3b(self, red: int, green: int, blue: int) -> None: ...
    def glColor3bv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3d(self, red: float, green: float, blue: float) -> None: ...
    def glColor3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3f(self, red: float, green: float, blue: float) -> None: ...
    def glColor3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3i(self, red: int, green: int, blue: int) -> None: ...
    def glColor3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3s(self, red: int, green: int, blue: int) -> None: ...
    def glColor3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3ub(self, red: int, green: int, blue: int) -> None: ...
    def glColor3ubv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3ui(self, red: int, green: int, blue: int) -> None: ...
    def glColor3uiv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor3us(self, red: int, green: int, blue: int) -> None: ...
    def glColor3usv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4b(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4bv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4d(self, red: float, green: float, blue: float, alpha: float) -> None: ...
    def glColor4dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4f(self, red: float, green: float, blue: float, alpha: float) -> None: ...
    def glColor4fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4i(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4s(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4ub(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4ubv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4ui(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4uiv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glColor4us(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glColor4usv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glEdgeFlag(self, flag: int) -> None: ...
    def glEdgeFlagv(self, flag: PYQT_OPENGL_ARRAY) -> None: ...
    def glEnd(self) -> None: ...
    def glIndexd(self, c: float) -> None: ...
    def glIndexdv(self, c: PYQT_OPENGL_ARRAY) -> None: ...
    def glIndexf(self, c: float) -> None: ...
    def glIndexfv(self, c: PYQT_OPENGL_ARRAY) -> None: ...
    def glIndexi(self, c: int) -> None: ...
    def glIndexiv(self, c: PYQT_OPENGL_ARRAY) -> None: ...
    def glIndexs(self, c: int) -> None: ...
    def glIndexsv(self, c: PYQT_OPENGL_ARRAY) -> None: ...
    def glNormal3b(self, nx: int, ny: int, nz: int) -> None: ...
    def glNormal3bv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glNormal3d(self, nx: float, ny: float, nz: float) -> None: ...
    def glNormal3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glNormal3f(self, nx: float, ny: float, nz: float) -> None: ...
    def glNormal3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glNormal3i(self, nx: int, ny: int, nz: int) -> None: ...
    def glNormal3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glNormal3s(self, nx: int, ny: int, nz: int) -> None: ...
    def glNormal3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos2d(self, x: float, y: float) -> None: ...
    def glRasterPos2dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos2f(self, x: float, y: float) -> None: ...
    def glRasterPos2fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos2i(self, x: int, y: int) -> None: ...
    def glRasterPos2iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos2s(self, x: int, y: int) -> None: ...
    def glRasterPos2sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos3d(self, x: float, y: float, z: float) -> None: ...
    def glRasterPos3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos3f(self, x: float, y: float, z: float) -> None: ...
    def glRasterPos3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos3i(self, x: int, y: int, z: int) -> None: ...
    def glRasterPos3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos3s(self, x: int, y: int, z: int) -> None: ...
    def glRasterPos3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos4d(self, x: float, y: float, z: float, w: float) -> None: ...
    def glRasterPos4dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos4f(self, x: float, y: float, z: float, w: float) -> None: ...
    def glRasterPos4fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos4i(self, x: int, y: int, z: int, w: int) -> None: ...
    def glRasterPos4iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRasterPos4s(self, x: int, y: int, z: int, w: int) -> None: ...
    def glRasterPos4sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glRectd(self, x1: float, y1: float, x2: float, y2: float) -> None: ...
    def glRectf(self, x1: float, y1: float, x2: float, y2: float) -> None: ...
    def glRecti(self, x1: int, y1: int, x2: int, y2: int) -> None: ...
    def glRects(self, x1: int, y1: int, x2: int, y2: int) -> None: ...
    def glTexCoord1d(self, s: float) -> None: ...
    def glTexCoord1dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord1f(self, s: float) -> None: ...
    def glTexCoord1fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord1i(self, s: int) -> None: ...
    def glTexCoord1iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord1s(self, s: int) -> None: ...
    def glTexCoord1sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord2d(self, s: float, t: float) -> None: ...
    def glTexCoord2dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord2f(self, s: float, t: float) -> None: ...
    def glTexCoord2fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord2i(self, s: int, t: int) -> None: ...
    def glTexCoord2iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord2s(self, s: int, t: int) -> None: ...
    def glTexCoord2sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord3d(self, s: float, t: float, r: float) -> None: ...
    def glTexCoord3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord3f(self, s: float, t: float, r: float) -> None: ...
    def glTexCoord3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord3i(self, s: int, t: int, r: int) -> None: ...
    def glTexCoord3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord3s(self, s: int, t: int, r: int) -> None: ...
    def glTexCoord3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord4d(self, s: float, t: float, r: float, q: float) -> None: ...
    def glTexCoord4dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord4f(self, s: float, t: float, r: float, q: float) -> None: ...
    def glTexCoord4fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord4i(self, s: int, t: int, r: int, q: int) -> None: ...
    def glTexCoord4iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexCoord4s(self, s: int, t: int, r: int, q: int) -> None: ...
    def glTexCoord4sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex2d(self, x: float, y: float) -> None: ...
    def glVertex2dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex2f(self, x: float, y: float) -> None: ...
    def glVertex2fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex2i(self, x: int, y: int) -> None: ...
    def glVertex2iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex2s(self, x: int, y: int) -> None: ...
    def glVertex2sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex3d(self, x: float, y: float, z: float) -> None: ...
    def glVertex3dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex3f(self, x: float, y: float, z: float) -> None: ...
    def glVertex3fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex3i(self, x: int, y: int, z: int) -> None: ...
    def glVertex3iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex3s(self, x: int, y: int, z: int) -> None: ...
    def glVertex3sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex4d(self, x: float, y: float, z: float, w: float) -> None: ...
    def glVertex4dv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex4f(self, x: float, y: float, z: float, w: float) -> None: ...
    def glVertex4fv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex4i(self, x: int, y: int, z: int, w: int) -> None: ...
    def glVertex4iv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glVertex4s(self, x: int, y: int, z: int, w: int) -> None: ...
    def glVertex4sv(self, v: PYQT_OPENGL_ARRAY) -> None: ...
    def glClipPlane(self, plane: int, equation: PYQT_OPENGL_ARRAY) -> None: ...
    def glColorMaterial(self, face: int, mode: int) -> None: ...
    def glFogf(self, pname: int, param: float) -> None: ...
    def glFogfv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glFogi(self, pname: int, param: int) -> None: ...
    def glFogiv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glLightf(self, light: int, pname: int, param: float) -> None: ...
    def glLightfv(self, light: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glLighti(self, light: int, pname: int, param: int) -> None: ...
    def glLightiv(self, light: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glLightModelf(self, pname: int, param: float) -> None: ...
    def glLightModelfv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glLightModeli(self, pname: int, param: int) -> None: ...
    def glLightModeliv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glLineStipple(self, factor: int, pattern: int) -> None: ...
    def glMaterialf(self, face: int, pname: int, param: float) -> None: ...
    def glMaterialfv(self, face: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glMateriali(self, face: int, pname: int, param: int) -> None: ...
    def glMaterialiv(self, face: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glPolygonStipple(self, mask: PYQT_OPENGL_ARRAY) -> None: ...
    def glShadeModel(self, mode: int) -> None: ...
    def glTexEnvf(self, target: int, pname: int, param: float) -> None: ...
    def glTexEnvfv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexEnvi(self, target: int, pname: int, param: int) -> None: ...
    def glTexEnviv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexGend(self, coord: int, pname: int, param: float) -> None: ...
    def glTexGendv(self, coord: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexGenf(self, coord: int, pname: int, param: float) -> None: ...
    def glTexGenfv(self, coord: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexGeni(self, coord: int, pname: int, param: int) -> None: ...
    def glTexGeniv(self, coord: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glRenderMode(self, mode: int) -> int: ...
    def glInitNames(self) -> None: ...
    def glLoadName(self, name: int) -> None: ...
    def glPassThrough(self, token: float) -> None: ...
    def glPopName(self) -> None: ...
    def glPushName(self, name: int) -> None: ...
    def glClearAccum(self, red: float, green: float, blue: float, alpha: float) -> None: ...
    def glClearIndex(self, c: float) -> None: ...
    def glIndexMask(self, mask: int) -> None: ...
    def glAccum(self, op: int, value: float) -> None: ...
    def glPopAttrib(self) -> None: ...
    def glPushAttrib(self, mask: int) -> None: ...
    def glMap1d(self, target: int, u1: float, u2: float, stride: int, order: int, points: PYQT_OPENGL_ARRAY) -> None: ...
    def glMap1f(self, target: int, u1: float, u2: float, stride: int, order: int, points: PYQT_OPENGL_ARRAY) -> None: ...
    def glMap2d(self, target: int, u1: float, u2: float, ustride: int, uorder: int, v1: float, v2: float, vstride: int, vorder: int, points: PYQT_OPENGL_ARRAY) -> None: ...
    def glMap2f(self, target: int, u1: float, u2: float, ustride: int, uorder: int, v1: float, v2: float, vstride: int, vorder: int, points: PYQT_OPENGL_ARRAY) -> None: ...
    def glMapGrid1d(self, un: int, u1: float, u2: float) -> None: ...
    def glMapGrid1f(self, un: int, u1: float, u2: float) -> None: ...
    def glMapGrid2d(self, un: int, u1: float, u2: float, vn: int, v1: float, v2: float) -> None: ...
    def glMapGrid2f(self, un: int, u1: float, u2: float, vn: int, v1: float, v2: float) -> None: ...
    def glEvalCoord1d(self, u: float) -> None: ...
    def glEvalCoord1dv(self, u: PYQT_OPENGL_ARRAY) -> None: ...
    def glEvalCoord1f(self, u: float) -> None: ...
    def glEvalCoord1fv(self, u: PYQT_OPENGL_ARRAY) -> None: ...
    def glEvalCoord2d(self, u: float, v: float) -> None: ...
    def glEvalCoord2dv(self, u: PYQT_OPENGL_ARRAY) -> None: ...
    def glEvalCoord2f(self, u: float, v: float) -> None: ...
    def glEvalCoord2fv(self, u: PYQT_OPENGL_ARRAY) -> None: ...
    def glEvalMesh1(self, mode: int, i1: int, i2: int) -> None: ...
    def glEvalPoint1(self, i: int) -> None: ...
    def glEvalMesh2(self, mode: int, i1: int, i2: int, j1: int, j2: int) -> None: ...
    def glEvalPoint2(self, i: int, j: int) -> None: ...
    def glAlphaFunc(self, func: int, ref: float) -> None: ...
    def glPixelZoom(self, xfactor: float, yfactor: float) -> None: ...
    def glPixelTransferf(self, pname: int, param: float) -> None: ...
    def glPixelTransferi(self, pname: int, param: int) -> None: ...
    def glPixelMapfv(self, map: int, mapsize: int, values: PYQT_OPENGL_ARRAY) -> None: ...
    def glPixelMapuiv(self, map: int, mapsize: int, values: PYQT_OPENGL_ARRAY) -> None: ...
    def glPixelMapusv(self, map: int, mapsize: int, values: PYQT_OPENGL_ARRAY) -> None: ...
    def glCopyPixels(self, x: int, y: int, width: int, height: int, type: int) -> None: ...
    def glDrawPixels(self, width: int, height: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glGetClipPlane(self, plane: int) -> typing.Tuple[float, float, float, float]: ...
    def glGetLightfv(self, light: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float], typing.Tuple[float, float, float, float]]: ...
    def glGetLightiv(self, light: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int], typing.Tuple[int, int, int, int]]: ...
    def glGetMaterialfv(self, face: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float], typing.Tuple[float, float, float, float]]: ...
    def glGetMaterialiv(self, face: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int], typing.Tuple[int, int, int, int]]: ...
    def glGetTexEnvfv(self, target: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetTexEnviv(self, target: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glGetTexGendv(self, coord: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetTexGenfv(self, coord: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetTexGeniv(self, coord: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glIsList(self, list: int) -> int: ...
    def glFrustum(self, left: float, right: float, bottom: float, top: float, zNear: float, zFar: float) -> None: ...
    def glLoadIdentity(self) -> None: ...
    def glLoadMatrixf(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glLoadMatrixd(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glMatrixMode(self, mode: int) -> None: ...
    def glMultMatrixf(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glMultMatrixd(self, m: PYQT_OPENGL_ARRAY) -> None: ...
    def glOrtho(self, left: float, right: float, bottom: float, top: float, zNear: float, zFar: float) -> None: ...
    def glPopMatrix(self) -> None: ...
    def glPushMatrix(self) -> None: ...
    def glRotated(self, angle: float, x: float, y: float, z: float) -> None: ...
    def glRotatef(self, angle: float, x: float, y: float, z: float) -> None: ...
    def glScaled(self, x: float, y: float, z: float) -> None: ...
    def glScalef(self, x: float, y: float, z: float) -> None: ...
    def glTranslated(self, x: float, y: float, z: float) -> None: ...
    def glTranslatef(self, x: float, y: float, z: float) -> None: ...
    def glBlendEquationSeparate(self, modeRGB: int, modeAlpha: int) -> None: ...
    def glDrawBuffers(self, n: int, bufs: PYQT_OPENGL_ARRAY) -> None: ...
    def glStencilOpSeparate(self, face: int, sfail: int, dpfail: int, dppass: int) -> None: ...
    def glStencilFuncSeparate(self, face: int, func: int, ref: int, mask: int) -> None: ...
    def glStencilMaskSeparate(self, face: int, mask: int) -> None: ...
    def glAttachShader(self, program: int, shader: int) -> None: ...
    def glBindAttribLocation(self, program: int, index: int, name: str) -> None: ...
    def glCompileShader(self, shader: int) -> None: ...
    def glCreateProgram(self) -> int: ...
    def glCreateShader(self, type: int) -> int: ...
    def glDeleteProgram(self, program: int) -> None: ...
    def glDeleteShader(self, shader: int) -> None: ...
    def glDetachShader(self, program: int, shader: int) -> None: ...
    def glDisableVertexAttribArray(self, index: int) -> None: ...
    def glEnableVertexAttribArray(self, index: int) -> None: ...
    def glGetActiveAttrib(self, program: int, index: int) -> typing.Tuple[str, int, int]: ...
    def glGetActiveUniform(self, program: int, index: int) -> typing.Tuple[str, int, int]: ...
    def glGetAttachedShaders(self, program: int) -> typing.Tuple[int, ...]: ...
    def glGetAttribLocation(self, program: int, name: str) -> int: ...
    def glGetProgramiv(self, program: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int]]: ...
    def glGetProgramInfoLog(self, program: int) -> bytes: ...
    def glGetShaderiv(self, shader: int, pname: int) -> int: ...
    def glGetShaderInfoLog(self, shader: int) -> bytes: ...
    def glGetShaderSource(self, shader: int) -> bytes: ...
    def glGetUniformLocation(self, program: int, name: str) -> int: ...
    def glGetVertexAttribdv(self, index: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetVertexAttribfv(self, index: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetVertexAttribiv(self, index: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glIsProgram(self, program: int) -> int: ...
    def glIsShader(self, shader: int) -> int: ...
    def glLinkProgram(self, program: int) -> None: ...
    def glUseProgram(self, program: int) -> None: ...
    def glUniform1f(self, location: int, v0: float) -> None: ...
    def glUniform2f(self, location: int, v0: float, v1: float) -> None: ...
    def glUniform3f(self, location: int, v0: float, v1: float, v2: float) -> None: ...
    def glUniform4f(self, location: int, v0: float, v1: float, v2: float, v3: float) -> None: ...
    def glUniform1i(self, location: int, v0: int) -> None: ...
    def glUniform2i(self, location: int, v0: int, v1: int) -> None: ...
    def glUniform3i(self, location: int, v0: int, v1: int, v2: int) -> None: ...
    def glUniform4i(self, location: int, v0: int, v1: int, v2: int, v3: int) -> None: ...
    def glUniform1fv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform2fv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform3fv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform4fv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform1iv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform2iv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform3iv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniform4iv(self, location: int, count: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniformMatrix2fv(self, location: int, count: int, transpose: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniformMatrix3fv(self, location: int, count: int, transpose: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glUniformMatrix4fv(self, location: int, count: int, transpose: int, value: PYQT_OPENGL_ARRAY) -> None: ...
    def glValidateProgram(self, program: int) -> None: ...
    def glVertexAttribPointer(self, index: int, size: int, type: int, normalized: int, stride: int, pointer: PYQT_OPENGL_BOUND_ARRAY) -> None: ...
    def glGenQueries(self, n: int) -> typing.Union[int, typing.Tuple[int, ...]]: ...
    def glDeleteQueries(self, n: int, ids: PYQT_OPENGL_ARRAY) -> None: ...
    def glIsQuery(self, id: int) -> int: ...
    def glBeginQuery(self, target: int, id: int) -> None: ...
    def glEndQuery(self, target: int) -> None: ...
    def glGetQueryiv(self, target: int, pname: int) -> int: ...
    def glBindBuffer(self, target: int, buffer: int) -> None: ...
    def glDeleteBuffers(self, n: int, buffers: PYQT_OPENGL_ARRAY) -> None: ...
    def glGenBuffers(self, n: int) -> typing.Union[int, typing.Tuple[int, ...]]: ...
    def glIsBuffer(self, buffer: int) -> int: ...
    def glBufferData(self, target: int, size: int, data: PYQT_OPENGL_ARRAY, usage: int) -> None: ...
    def glBufferSubData(self, target: int, offset: int, size: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glUnmapBuffer(self, target: int) -> int: ...
    def glGetBufferParameteriv(self, target: int, pname: int) -> int: ...
    def glBlendFuncSeparate(self, sfactorRGB: int, dfactorRGB: int, sfactorAlpha: int, dfactorAlpha: int) -> None: ...
    def glPointParameterf(self, pname: int, param: float) -> None: ...
    def glPointParameterfv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glPointParameteri(self, pname: int, param: int) -> None: ...
    def glPointParameteriv(self, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glActiveTexture(self, texture: int) -> None: ...
    def glSampleCoverage(self, value: float, invert: int) -> None: ...
    def glCompressedTexImage3D(self, target: int, level: int, internalformat: int, width: int, height: int, depth: int, border: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCompressedTexImage2D(self, target: int, level: int, internalformat: int, width: int, height: int, border: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCompressedTexImage1D(self, target: int, level: int, internalformat: int, width: int, border: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCompressedTexSubImage3D(self, target: int, level: int, xoffset: int, yoffset: int, zoffset: int, width: int, height: int, depth: int, format: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCompressedTexSubImage2D(self, target: int, level: int, xoffset: int, yoffset: int, width: int, height: int, format: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glCompressedTexSubImage1D(self, target: int, level: int, xoffset: int, width: int, format: int, imageSize: int, data: PYQT_OPENGL_ARRAY) -> None: ...
    def glBlendColor(self, red: float, green: float, blue: float, alpha: float) -> None: ...
    def glBlendEquation(self, mode: int) -> None: ...
    def glDrawRangeElements(self, mode: int, start: int, end: int, count: int, type: int, indices: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexImage3D(self, target: int, level: int, internalformat: int, width: int, height: int, depth: int, border: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexSubImage3D(self, target: int, level: int, xoffset: int, yoffset: int, zoffset: int, width: int, height: int, depth: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glCopyTexSubImage3D(self, target: int, level: int, xoffset: int, yoffset: int, zoffset: int, x: int, y: int, width: int, height: int) -> None: ...
    def glDrawArrays(self, mode: int, first: int, count: int) -> None: ...
    def glDrawElements(self, mode: int, count: int, type: int, indices: PYQT_OPENGL_ARRAY) -> None: ...
    def glPolygonOffset(self, factor: float, units: float) -> None: ...
    def glCopyTexImage1D(self, target: int, level: int, internalformat: int, x: int, y: int, width: int, border: int) -> None: ...
    def glCopyTexImage2D(self, target: int, level: int, internalformat: int, x: int, y: int, width: int, height: int, border: int) -> None: ...
    def glCopyTexSubImage1D(self, target: int, level: int, xoffset: int, x: int, y: int, width: int) -> None: ...
    def glCopyTexSubImage2D(self, target: int, level: int, xoffset: int, yoffset: int, x: int, y: int, width: int, height: int) -> None: ...
    def glTexSubImage1D(self, target: int, level: int, xoffset: int, width: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexSubImage2D(self, target: int, level: int, xoffset: int, yoffset: int, width: int, height: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glBindTexture(self, target: int, texture: int) -> None: ...
    def glDeleteTextures(self, n: int, textures: PYQT_OPENGL_ARRAY) -> None: ...
    def glGenTextures(self, n: int) -> typing.Union[int, typing.Tuple[int, ...]]: ...
    def glIsTexture(self, texture: int) -> int: ...
    def glIndexub(self, c: int) -> None: ...
    def glIndexubv(self, c: PYQT_OPENGL_ARRAY) -> None: ...
    def glCullFace(self, mode: int) -> None: ...
    def glFrontFace(self, mode: int) -> None: ...
    def glHint(self, target: int, mode: int) -> None: ...
    def glLineWidth(self, width: float) -> None: ...
    def glPointSize(self, size: float) -> None: ...
    def glPolygonMode(self, face: int, mode: int) -> None: ...
    def glScissor(self, x: int, y: int, width: int, height: int) -> None: ...
    def glTexParameterf(self, target: int, pname: int, param: float) -> None: ...
    def glTexParameterfv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexParameteri(self, target: int, pname: int, param: int) -> None: ...
    def glTexParameteriv(self, target: int, pname: int, params: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexImage1D(self, target: int, level: int, internalformat: int, width: int, border: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glTexImage2D(self, target: int, level: int, internalformat: int, width: int, height: int, border: int, format: int, type: int, pixels: PYQT_OPENGL_ARRAY) -> None: ...
    def glDrawBuffer(self, mode: int) -> None: ...
    def glClear(self, mask: int) -> None: ...
    def glClearColor(self, red: float, green: float, blue: float, alpha: float) -> None: ...
    def glClearStencil(self, s: int) -> None: ...
    def glClearDepth(self, depth: float) -> None: ...
    def glStencilMask(self, mask: int) -> None: ...
    def glColorMask(self, red: int, green: int, blue: int, alpha: int) -> None: ...
    def glDepthMask(self, flag: int) -> None: ...
    def glDisable(self, cap: int) -> None: ...
    def glEnable(self, cap: int) -> None: ...
    def glFinish(self) -> None: ...
    def glFlush(self) -> None: ...
    def glBlendFunc(self, sfactor: int, dfactor: int) -> None: ...
    def glLogicOp(self, opcode: int) -> None: ...
    def glStencilFunc(self, func: int, ref: int, mask: int) -> None: ...
    def glStencilOp(self, fail: int, zfail: int, zpass: int) -> None: ...
    def glDepthFunc(self, func: int) -> None: ...
    def glPixelStoref(self, pname: int, param: float) -> None: ...
    def glPixelStorei(self, pname: int, param: int) -> None: ...
    def glReadBuffer(self, mode: int) -> None: ...
    def glGetBooleanv(self, pname: int) -> typing.Union[bool, typing.Tuple[bool, ...]]: ...
    def glGetDoublev(self, pname: int) -> typing.Union[float, typing.Tuple[float, ...]]: ...
    def glGetError(self) -> int: ...
    def glGetFloatv(self, pname: int) -> typing.Union[float, typing.Tuple[float, ...]]: ...
    def glGetIntegerv(self, pname: int) -> typing.Union[int, typing.Tuple[int, ...]]: ...
    def glGetString(self, name: int) -> str: ...
    def glGetTexParameterfv(self, target: int, pname: int) -> typing.Union[float, typing.Tuple[float, float, float, float]]: ...
    def glGetTexParameteriv(self, target: int, pname: int) -> typing.Union[int, typing.Tuple[int, int, int, int]]: ...
    def glGetTexLevelParameterfv(self, target: int, level: int, pname: int) -> float: ...
    def glGetTexLevelParameteriv(self, target: int, level: int, pname: int) -> int: ...
    def glIsEnabled(self, cap: int) -> int: ...
    def glDepthRange(self, nearVal: float, farVal: float) -> None: ...
    def glViewport(self, x: int, y: int, width: int, height: int) -> None: ...
    def initializeOpenGLFunctions(self) -> bool: ...
